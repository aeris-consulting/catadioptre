name: Build

on:
  push:
    branches:
      - 'main'

jobs:
  build:
    timeout-minutes: 5
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest' ]
        java: [ '8', '11' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # https://github.com/actions/setup-java
      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-qalipsis-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-qalipsis-gradle-

      - name: Cache Gradle wrapper
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-qalipsis-gradle-wrapper-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-qalipsis-gradle-wrapper-

      - name: Tests
        run: ./gradlew clean check --rerun-tasks --continue --refresh-dependencies

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always()
        with:
          report_paths: '**/build/test-results/*/TEST-*.xml'
          fail_on_failure: true
          summary: true

      - name: Report
        if: always()
        run: ./gradlew -DignoreUnitTestFailures=true -DignoreIntegrationTestFailures=true testReport --continue

      - name: Upload Tests report
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: JUnit Report
          path: ./build/reports/tests/

      - name: Build
        run: ./gradlew build

      - name: Upload JARs
        uses: actions/upload-artifact@v2
        with:
          name: Jars
          path: |
            ./**/build/libs/*.jar
            !./**/build/libs/*-javadoc.jar

